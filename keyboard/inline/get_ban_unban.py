
from aiogram import types
from create_bot import dp
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, BotCommand

SERVERS = [
    "‚Ññ0 [–ù–∏—á–µ–≥–æ]",
    "‚Ññ1 [Phoenix]",
    "‚Ññ2 [Tucson]",
    "‚Ññ3 [Scottdale]",
    "‚Ññ4 [Chandler]",
    "‚Ññ5 [Brainburg]",
    "‚Ññ6 [Saint Rose]",
    "‚Ññ7 [Mesa]",
    "‚Ññ8 [Red-Rock]",
    "‚Ññ9 [Yuma]",
    "‚Ññ10 [Surprise]",
    "‚Ññ11 [Prescott]",
    "‚Ññ12 [Glendale]",
    "‚Ññ13 [Kingman]",
    "‚Ññ14 [Winslow]",
    "‚Ññ15 [Payson]",
    "‚Ññ16 [Gilbert]",
    "‚Ññ17 [Show Low]",
    "‚Ññ18 [Casa-Grande]",
    "‚Ññ19 [Page]",
    "‚Ññ20 [Sun-City]",
    "‚Ññ21 [Queen-Creek]",
    "‚Ññ22 [Sedona]",
    "‚Ññ23 [Holiday]",
    "‚Ññ24 [Wednesday]",
    "‚Ññ25 [Yava]",
    "‚Ññ26 [Faraway]",
    "‚Ññ27 [Bumble Bee]",
    "‚Ññ28 [Christmas]",
]

async def set_default_commands(dp):
    await dp.bot.set_my_commands([
        BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ üî•")
    ])

def check_user_adm(user_id):
    with open("text/admins.txt", 'r') as file:
        banned_users = file.read()

    return True

    
def pc_or_mobile():
    keyboard = InlineKeyboardMarkup()
    YooMoney = InlineKeyboardButton('üñ• –ü–ö', callback_data='server_type_pc')
    Qiwi = InlineKeyboardButton('üì± –ú–û–ë–ê–ô–õ', callback_data='server_type_mobile')
    keyboard.add(YooMoney, Qiwi)
    return keyboard

def send_or_not():
    keyboard = InlineKeyboardMarkup()
    YooMoney = InlineKeyboardButton('‚úÖ –û–¢–ü–†–ê–í–ò–¢–¨', callback_data='yes_send')
    Qiwi = InlineKeyboardButton('‚ùå –£–î–ê–õ–ò–¢–¨', callback_data='no_send')
    keyboard.add(YooMoney, Qiwi)
    return keyboard

def check_func(user_id):
    if check_user_adm(user_id):
        keyboard = InlineKeyboardMarkup()
        YooMoney = InlineKeyboardButton("üé≤ –õ—é–±–∞—è", callback_data='random')
        Qiwi = InlineKeyboardButton("‚öô –ü–∞—Ä–∞–º–µ—Ç—Ä—ã", callback_data='parametr')
        keyboard.add(YooMoney, Qiwi)
        return keyboard
    
def sort_by(user_id, data):
    if check_user_adm(user_id):
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton(f"{'‚úÖ' if data.get('server', False) else '‚ùå'} C–µ—Ä–≤–µ—Ä", callback_data='sort_server'))
        keyboard.add(InlineKeyboardButton(f"{'‚úÖ' if data.get('time', False) else '‚ùå'} –í—Ä–µ–º—è", callback_data='sort_time'))
        keyboard.add(InlineKeyboardButton(f"{'‚úÖ' if data.get('nick', False) else '‚ùå'} –ù–∏–∫–Ω–µ–π–º", callback_data='sort_nick'))
        keyboard.add(InlineKeyboardButton(f"{'‚úÖ' if data.get('tags', False) else '‚ùå'} –¢–µ–≥–∏", callback_data='sort_tags'))
        keyboard.add(InlineKeyboardButton(f"‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", callback_data='sort_start'))

        return keyboard

def sort_by_time(user_id):
    if check_user_adm(user_id):
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("üÜï –ù–æ–≤—ã–µ", callback_data='time_new'))
        keyboard.add(InlineKeyboardButton("ü¶• –°—Ç–∞—Ä—ã–µ", callback_data='time_old'))
        return keyboard

def sort_by_server(user_id):
    keyboard = InlineKeyboardMarkup(row_width=2)
    for i in range(1, len(SERVERS), 2):
        unique_id_1 = f"server_{i}"
        unique_id_2 = f"server_{i+1}" if i + 1 < len(SERVERS) else None

        button_1 = InlineKeyboardButton(SERVERS[i], callback_data=unique_id_1)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if unique_id_2:
            button_2 = InlineKeyboardButton(SERVERS[i+1], callback_data=unique_id_2)
            keyboard.add(button_1, button_2)
        else:
            keyboard.add(button_1)


    return keyboard

def check_or_not(user_id, unique_id):
    keyboard = InlineKeyboardMarkup()
    YooMoney = InlineKeyboardButton('‚úÖ  –û–î–û–ë–†–ò–¢–¨', callback_data=f'yes_check_{unique_id}')
    Qiwi = InlineKeyboardButton('‚ùå –û–¢–ö–õ–û–ù–ò–¢–¨', callback_data=f'no_check_{unique_id}')
    Ban = InlineKeyboardButton('üõë –ó–ê–ë–ê–ù–ò–¢–¨', callback_data=f'ban_{user_id}')
    Comeback = InlineKeyboardButton('‚¨Ö –ù–ê–ó–ê–î', callback_data=f'comeback') 
    keyboard.add(YooMoney, Qiwi)
    keyboard.add(Ban, Comeback)
    return keyboard

def full_reviewed(user_id, unique_id):
    keyboard = InlineKeyboardMarkup()
    YooMoney = InlineKeyboardButton('‚úÖ  –†–ê–ó–û–ë–†–ê–õ–ò–°–¨', callback_data=f'yes_review_{unique_id}')
    Ban = InlineKeyboardButton('üìû –°–í–Ø–ó–ê–¢–¨–°–Ø –ê–ù–û–ù–ò–ú–ù–û', callback_data=f'connect_{user_id}')
    delete = InlineKeyboardButton('üóë C–ö–†–´–¢–¨', callback_data=f'hide') 
    keyboard.add(YooMoney)
    keyboard.add(Ban)
    keyboard.add(delete)
    return keyboard


def get_ban_unban(message_ids, channel_id):
    keyboard = InlineKeyboardMarkup()
    yes_message = InlineKeyboardButton('–ó–∞–±–∞–Ω–∏—Ç—å', callback_data=f'banned_{message_ids}')
    no_message = InlineKeyboardButton('–†–∞–∑–±–∞–Ω–∏—Ç—å', callback_data=f'unban_{channel_id}')
    keyboard.add(yes_message,  no_message)
    return keyboard